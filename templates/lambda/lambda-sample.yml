AWSTemplateFormatVersion: 2010-09-09
Description: "Lambda Function Stack"

# -------------------------------------
# Metadata
# -------------------------------------
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "Lambda Configuration"
        Parameters:
          - LambdaArchiveBucketName
          - LambdaArchiveBucketObjectKey
          - Handler
          - MemorySize
          - Timeout
          - Runtime

# -------------------------------------
# Input parameters
# -------------------------------------
Parameters:
  ProjectName:
    Description: "Enter the project name. (ex: shun198)"
    Type: String
    MinLength: 1
    ConstraintDescription: "ProjectName must be entered."
    Default: shun198
  Environment:
    Description: "Select the environment."
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd
    ConstraintDescription: "Environment must be selected."
  LambdaArchiveBucketName:
    Description: "Enter the S3 bucket name for Lambda zip archive."
    Type: String
  LambdaArchiveBucketObjectKey:
    Description: "Enter the S3 bucket object key for Lambda zip archive."
    Type: String
  Handler:
    Description: "Enter the Lambda function name to delete data. (default: lambda_function.lambda_handler)"
    Type: String
    Default: lambda_function.lambda_handler
  MemorySize:
    Description: "Enter the Lambda function memory size. (MiB) (default: 128)"
    Type: Number
    Default: 128
    MinValue: 128
    MaxValue: 10240
  Timeout:
    Description: "Enter the Lambda function timeout second. (default: 30)"
    Type: Number
    Default: 30
    MinValue: 1
    MaxValue: 900
  Runtime:
    Description: "Enter the Lambda function runtime."
    Type: String
    AllowedValues:
      - python3.11
    Default: python3.11
  QueueArn:
    Description: "Enter the SQS queue ARN (ex: arn:aws:sqs:<aws_region>:<aws_account_id>:shun198-dev-sqs.fifo)"
    Type: String
# -------------------------------------
# Resources
# -------------------------------------
Resources:
  # -------------------------------------
  # Lambda Function
  # -------------------------------------
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaArchiveBucketName
        S3Key: !Ref LambdaArchiveBucketObjectKey
      FunctionName: !Sub ${ProjectName}-${Environment}
      Description: "サンプル用Lambda 関数"
      Handler: !Ref Handler
      MemorySize: !Ref MemorySize
      Role: !GetAtt LambdaRole.Arn
      Runtime: !Ref Runtime
      Timeout: !Ref Timeout
      PackageType: Zip
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt Lambda.Arn
      Principal: cloudformation.amazonaws.com

  # -------------------------------------
  # Lambda Trigger
  # -------------------------------------
  LambdaTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      BatchSize: 1
      EventSourceArn: !Ref QueueArn

  # -------------------------------------
  # IAM Role
  # -------------------------------------
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub LambdaRole-${ProjectName}-${Environment}-sample
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /service-role/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
      Policies:
        - PolicyName: !Sub LambdaAccess-${ProjectName}-${Environment}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: "*"
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub
                  - arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${Lambda}:*
                  - {
                      Lambda: !Sub "${ProjectName}-${Environment}",
                    }
